{"ast":null,"code":"var _jsxFileName = \"/Users/simon.mor/personal/react_login_train/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\n_c = AuthContext;\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext, {\n    children: \"(props.children)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c2 = AuthContextProvider;\nexport default AuthContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/simon.mor/personal/react_login_train/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","props","setIsLoggedIn","logoutHandler","loginHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFkB,CAApB,CAApB;KAAMH,W;AAKN,OAAO,MAAMI,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACH,UAAD,EAAaI,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACvBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAZM;;GAAMF,mB;;MAAAA,mB;AAcb,eAAeJ,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: () => {}\n});\n\nexport const AuthContextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    \n    const logoutHandler = () => {\n        setIsLoggedIn(false);\n    }\n\n    const loginHandler = () => {\n        setIsLoggedIn(true);\n    }\n    \n    return <AuthContext>(props.children)</AuthContext>\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}