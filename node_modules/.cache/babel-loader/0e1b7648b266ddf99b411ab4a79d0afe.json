{"ast":null,"code":"var _jsxFileName = \"/Users/simon.mor/personal/react_login_train/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.payload,\n      isValid: action.payload.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.payload,\n      isValid: action.payload.trim() > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim() > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   //cleanup function\n  //   return () => {\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      payload: event.target.value\n    });\n    setFormIsValid(emailState.isValid && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && enteredPassword.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"bUsDImaeltMBEhY79c+VOCUR/ns=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/simon.mor/personal/react_login_train/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","prevState","action","type","value","payload","isValid","includes","passwordReducer","trim","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","target","enteredPassword","length","passwordChangeHandler","setEnteredPassword","validateEmailHandler","validatePasswordHandler","setPasswordIsValid","submitHandler","preventDefault","onLogin","login","control","invalid","passwordIsValid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {value: action.payload, isValid: action.payload.includes('@')};\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {value: prevState.value, isValid: prevState.value.includes('@')};\n  }\n  \n  return {value: '', isValid: false};\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {value: action.payload, isValid: action.payload.trim() > 6};\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {value: prevState.value, isValid: prevState.value.trim() > 6};\n  }\n\n  return {value: '', isValid: false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: null})\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   //cleanup function\n  //   return () => {\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail( {type: 'USER_INPUT', payload: event.target.value} );\n\n    setFormIsValid(\n      emailState.isValid && enteredPassword.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      emailState.isValid && enteredPassword.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}